// Code generated by mockery v2.14.0. DO NOT EDIT.

package automock

import (
	hash "hash"

	mock "github.com/stretchr/testify/mock"
)

// HashBuilder is an autogenerated mock type for the HashBuilder type
type HashBuilder struct {
	mock.Mock
}

// New provides a mock function with given fields:
func (_m *HashBuilder) New() hash.Hash {
	ret := _m.Called()

	var r0 hash.Hash
	if rf, ok := ret.Get(0).(func() hash.Hash); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(hash.Hash)
		}
	}

	return r0
}

type mockConstructorTestingTNewHashBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewHashBuilder creates a new instance of HashBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHashBuilder(t mockConstructorTestingTNewHashBuilder) *HashBuilder {
	mock := &HashBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
